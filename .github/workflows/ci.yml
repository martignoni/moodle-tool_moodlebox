name: Moodle Plugin CI

on:
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - 'master'

jobs:
  test:
    name: With Moodle 3.11
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:10
        env:
          POSTGRES_USER: 'postgres'
          POSTGRES_HOST_AUTH_METHOD: 'trust'
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
      mariadb:
        image: mariadb:10.5
        env:
          MYSQL_USER: 'root'
          MYSQL_ALLOW_EMPTY_PASSWORD: "true"
        ports:
        - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    strategy:
      fail-fast: false
      matrix:
        php:
          - '7.3'
          - '7.4'
          - '8.0'
        moodle-branch:
          - 'MOODLE_311_STABLE'
        database:
          - 'pgsql'
          - 'mariadb'

    steps:
    - name: Check out repository code
      uses: actions/checkout@v2
      with:
        # Clone in plugin subdir, so we can setup CI in default directory.
        path: plugin

    - name: Setup PHP ${{ matrix.php }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: ${{ matrix.extensions }}
        ini-values: max_input_vars=5000
        coverage: none

    - name: Initialise moodle-plugin-ci
      run: |
        composer create-project -n --no-dev --prefer-dist moodlehq/moodle-plugin-ci ci ^3
        # Add dirs to $PATH
        echo $(cd ci/bin; pwd) >> $GITHUB_PATH
        echo $(cd ci/vendor/bin; pwd) >> $GITHUB_PATH
        # PHPUnit depends on en_AU.UTF-8 locale
        sudo locale-gen en_AU.UTF-8
        # Allow node version switching
        echo "NVM_DIR=$HOME/.nvm" >> $GITHUB_ENV

    - name: Install moodle-plugin-ci
      # Need explicit IP to stop mysql client using domain socket.
      run: |
        moodle-plugin-ci install --plugin ./plugin --db-host=127.0.0.1
      env:
        DB: ${{ matrix.database }}
        MOODLE_BRANCH: ${{ matrix.moodle-branch }}

    # Currently it stops if any command return non 0 exist status, need
    # wrapper to collect exist status and list result and the end.
    # For testing purposes at this stage, just assume each command succeeds.
    - name: PHP Lint
      if: ${{ always() }}
      run: moodle-plugin-ci phplint || true

    - name: PHP Copy/Paste Detector
      continue-on-error: true # This step will show errors but will not fail
      if: ${{ always() }}
      run: moodle-plugin-ci phpcpd || true

    - name: PHP Mess Detector
      continue-on-error: true # This step will show errors but will not fail
      if: ${{ always() }}
      run: moodle-plugin-ci phpmd || true

    - name: Moodle Code Checker
      if: ${{ always() }}
      run: moodle-plugin-ci codechecker --max-warnings 0 || true

    - name: Moodle PHPDoc Checker
      if: ${{ always() }}
      run: moodle-plugin-ci phpdoc || true

    - name: Validating
      if: ${{ always() }}
      run: moodle-plugin-ci validate || true

    - name: Check upgrade savepoints
      if: ${{ always() }}
      run: moodle-plugin-ci savepoints || true

    - name: Mustache Lint
      if: ${{ always() }}
      run: moodle-plugin-ci mustache || true

    - name: Grunt
      if: ${{ always() }}
      run: moodle-plugin-ci grunt --max-lint-warnings 0 || true

    - name: PHPUnit tests
      if: ${{ always() }}
      run: moodle-plugin-ci phpunit || true

    - name: Behat features
      if: ${{ always() }}
      run: moodle-plugin-ci behat --profile chrome || true
